// INSERT METHOD  - STEPS AND LOGIC BREAKDOWN

// IF WE HAVE A TREE AND WE  WANT TO INSERT A NODE WITH A VALUE OF 27

FIRST WE CREATE A NODE

WE TAKE THE 27 AND COMPARE IT TO THE TOP NODE IF ITS < (LESS THAN) IT GOES LEFT,  IF > (GREATER THAN) IT GOES RIGHT

WE CAN EITHER INSERT NODE IF SPOT IS OPEN OR IF THERE IS A NODE THEN WE COMPARE THE NEW NODE TO EXISTING NODE ALSO.
IF LESS THAN IT GOES LEFT AGAIN IF GREATER IT GOES RIGHT.

WE SEE THAT WE HAVE TO KEEP DOING THIS SO WE KNOW WE WILL NEED A LOOP.
WE DONT KNOW HOW MANY TIMES WE HAVE TO LOOP SO WE WOULD WANT TO USE A WHILE LOOP

WE WILL ALSO NEED A VARIABLE THAT STARTS AT THE TOP WHICH WE CALL TEMP
WE WILL ALSO NEED TO SET ROOT AND MAKE IT EQUAL TO TEMP

WE COULD HAVE A SITUATION WHERE ROOT IS NULL

WE ALSO HAVE ANOTHER EDGE CASE IF THE NODE IS EQUAL TO A NODE THAT IS ALREADY IN THE TREE
WE CANNOT HAVE A VALUE IS EQUAL TO ONE THAT EXISTS.   
IF WE DO WANT TO HAVE IT WE CAN WORK AROUND BY HAVING SOMETHING LIKE "COUNT"
THE COUNT WOULD BE ONE OR 2 IN THE TREE
BECASUE WE DONT WANT THAT IN THIS CASE WE WILL HAVE A IF STATEMENT WHERE IF NEW NODE = TEMP
WE RETURN UNDEFINED AS THE VALUE WILL ALREADY EXIST.

SO OUR PSUDO CODE IS THIS:

 create newNode
if root === null then root = newNode
let temp = this.root
while loop 
if newNode === temp return UNDEFINED
if < left else > right 
if null insert newNode else move to next